name: Continuous Integration on Pull Request
on:
  pull_request:
    branches: [staging, master]
jobs:
  Audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use right version of node
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.0'
      - name: Install dependencies
        run: npm ci
      - name: Verify vulnerabilities
        run: npm audit
  Test:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:11.12
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: auth
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      cache:
        image: redis:6.2.4
        hostname: redis
        restart: always
        volumes:
          - v-cache:/data
        ports:
          - '6379:6379'
        networks:
          - host

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.0'
      - name: Install dependencies
        run: npm ci
      - name: Execute test
        run: npm test
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: true
          files: ./coverage/cobertura-coverage.xml
      - name: Test & publish to Code Climate
        uses: paambaati/codeclimate-action@v2.5.7
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TOKEN }}
        with:
          coverageLocations: ${{github.workspace}}/coverage/lcov.info:lcov
          debug: true
          coverageCommand: npm run test
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.0'
      - name: Install dependencies
        run: npm ci
      - name: Verify build
        run: npm run build
